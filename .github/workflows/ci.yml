name: CI

on: [push]

jobs:
  test-powershell:
    name: Test PowerShell
    defaults:
      run:
        working-directory: dotnet/powershell
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository code
      uses: actions/checkout@v3
    - name: Test
      shell: pwsh
      run: |
        Invoke-Pester
  test-dotnet:
    name: Test C#
    defaults:
      run:
        working-directory: dotnet/csharp
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        dotnet-version: [7.0.x]
        os: [ubuntu-latest]
    steps:
    - name: checkout
      uses: actions/checkout@v2
    - name: Set up .Net Core SDK ${{ matrix.dotnet-version }}
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ matrix.dotnet-version }}
    - name: Install dependencies
      run: dotnet restore
    - name: Build solution
      run: dotnet build --configuration Release --no-restore
    - name: Test
      run: dotnet test --no-restore
  lint-js-2020:
    name: Lint js/2020
    defaults:
      run:
        working-directory: js/2020
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node_version: [14]
        os: [ubuntu-latest]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Node.js ${{ matrix.node_version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node_version }}
    - name: Install dependencies
      run: yarn install
    - name: Lint
      run: yarn lint
  test-js-2020:
    name: Test js/2020
    defaults:
      run:
        working-directory: js/2020
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node_version: [14]
        os: [ubuntu-latest]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Node.js ${{ matrix.node_version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node_version }}
    - name: Install dependencies
      run: yarn install
    - name: Test
      run: yarn test
